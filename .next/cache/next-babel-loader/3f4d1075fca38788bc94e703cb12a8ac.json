{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass QueryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.stringNotEmpty = this.stringNotEmpty.bind(this);\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails\n    };\n  }\n\n  async handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // console.log(name + \" \" + value);\n    // setInputs(values => ({...values, [name]: value}))\n\n    await this.setState({\n      [name]: value\n    });\n\n    if (this.stringNotEmpty(this.state.email) && (this.stringNotEmpty(this.state.lei) || this.stringNotEmpty(this.state.legal_person_identifier) && this.stringNotEmpty(this.state.companyName))) {\n      this.setState({\n        isNextEnabled: true\n      });\n    } else {\n      this.setState({\n        isNextEnabled: false\n      });\n    }\n  }\n\n  stringNotEmpty(s) {\n    if (s) {\n      let result = s.length > 0;\n      console.log(`not empty ${s}:: ${result}`);\n      return result;\n    }\n\n    return false;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\",\n        marginTop: \"3rem\"\n      }\n    }, \"In order to build the KYB profile of your Company, please provide your name and company\\u2019s details below, and then click the \\u201CSubmit\\u201D button.\"), __jsx(\"form\", {\n      action: \"/start-login\",\n      method: \"post\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, \"Company Details:\"), __jsx(\"label\", {\n      className: \"row\"\n    }, \"Company Name:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"companyName\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"Legal Person Identifier:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"legal_person_identifier\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"LEI:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"lei\",\n      onChange: this.handleChange\n    })), __jsx(\"div\", {\n      className: \"row\"\n    }, \"Company Details:\"), __jsx(\"label\", {\n      className: \"row\"\n    }, \"Name:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"Surname:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"surname\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"e-mail:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleChange\n    })), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"input\", {\n      type: \"submit\",\n      disabled: !this.state.isNextEnabled\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/company-selection.js"],"names":["React","axios","Layout","connect","ValidateTable","QueryView","Component","constructor","props","state","companyName","companyCountry","LEI","isNextEnabled","handleChange","bind","stringNotEmpty","getInitialProps","reduxStore","req","userDetails","event","name","target","value","setState","email","lei","legal_person_identifier","s","result","length","console","log","render","marginBottom","marginTop","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,cAAc,EAAE,IAFL;AAGXC,MAAAA,GAAG,EAAE,IAHM;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAE2B,eAAfE,eAAe,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAAsB;AAChD;AACA;AACA,WAAO;AACLC,MAAAA,WAAW,EAAED,GAAG,CAACC;AADZ,KAAP;AAGD;;AAEiB,QAAZN,YAAY,CAACO,KAAD,EAAQ;AACxB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,UAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B,CAFwB,CAGxB;AACA;;AACA,UAAM,KAAKC,QAAL,CAAc;AAClB,OAACH,IAAD,GAAQE;AADU,KAAd,CAAN;;AAGA,QACE,KAAKR,cAAL,CAAoB,KAAKP,KAAL,CAAWiB,KAA/B,MACC,KAAKV,cAAL,CAAoB,KAAKP,KAAL,CAAWkB,GAA/B,KACE,KAAKX,cAAL,CAAoB,KAAKP,KAAL,CAAWmB,uBAA/B,KACC,KAAKZ,cAAL,CAAoB,KAAKP,KAAL,CAAWC,WAA/B,CAHJ,CADF,EAKE;AACA,WAAKe,QAAL,CAAc;AACZZ,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KATD,MASO;AACL,WAAKY,QAAL,CAAc;AACZZ,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD;AACF;;AAEDG,EAAAA,cAAc,CAACa,CAAD,EAAI;AAChB,QAAIA,CAAJ,EAAO;AACL,UAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,GAAW,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYJ,CAAE,MAAKC,MAAO,EAAvC;AAEA,aAAOA,MAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,SAAS,EAAE;AAAnC;AAFT,qKADF,EASE;AAAM,MAAA,MAAM,EAAC,cAAb;AAA4B,MAAA,MAAM,EAAC;AAAnC,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,0BADF,EAEE;AAAO,MAAA,SAAS,EAAC;AAAjB,wBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,QAAQ,EAAE,KAAKtB;AAHjB,MAFF,CAFF,EAUE;AAAO,MAAA,SAAS,EAAC;AAAjB,mCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,yBAFP;AAGE,MAAA,QAAQ,EAAE,KAAKA;AAHjB,MAFF,CAVF,EAkBE;AAAO,MAAA,SAAS,EAAC;AAAjB,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,KAAxB;AAA8B,MAAA,QAAQ,EAAE,KAAKA;AAA7C,MAFF,CAlBF,EAuBE;AAAK,MAAA,SAAS,EAAC;AAAf,0BAvBF,EAyBE;AAAO,MAAA,SAAS,EAAC;AAAjB,gBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAKA;AAA9C,MAFF,CAzBF,EA6BE;AAAO,MAAA,SAAS,EAAC;AAAjB,mBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,QAAQ,EAAE,KAAKA;AAAjD,MAFF,CA7BF,EAiCE;AAAO,MAAA,SAAS,EAAC;AAAjB,kBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKA;AAA/C,MAFF,CAjCF,EAsCE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,CAAC,KAAKL,KAAL,CAAWI;AAA3C,MADF,CAtCF,CATF,CADF;AAsDD;;AA9GqC;;AAiHxC,SAASwB,eAAT,CAAyB5B,KAAzB,EAAgC;AAC9B,SAAO;AACL6B,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAGA,eAAerC,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClC,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass QueryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.stringNotEmpty = this.stringNotEmpty.bind(this);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n    };\n  }\n\n  async handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    // console.log(name + \" \" + value);\n    // setInputs(values => ({...values, [name]: value}))\n    await this.setState({\n      [name]: value,\n    });\n    if (\n      this.stringNotEmpty(this.state.email) &&\n      (this.stringNotEmpty(this.state.lei) ||\n        (this.stringNotEmpty(this.state.legal_person_identifier) &&\n          this.stringNotEmpty(this.state.companyName)))\n    ) {\n      this.setState({\n        isNextEnabled: true,\n      });\n    } else {\n      this.setState({\n        isNextEnabled: false,\n      });\n    }\n  }\n\n  stringNotEmpty(s) {\n    if (s) {\n      let result = s.length > 0;\n      console.log(`not empty ${s}:: ${result}`);\n\n      return result;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div\n          className=\"row\"\n          style={{ marginBottom: \"3rem\", marginTop: \"3rem\" }}\n        >\n          In order to build the KYB profile of your Company, please provide your\n          name and company’s details below, and then click the “Submit” button.\n        </div>\n\n        <form action=\"/start-login\" method=\"post\">\n          <div className=\"row\">Company Details:</div>\n          <label className=\"row\">\n            Company Name:\n            <input\n              type=\"text\"\n              name=\"companyName\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"row\">\n            Legal Person Identifier:\n            <input\n              type=\"text\"\n              name=\"legal_person_identifier\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"row\">\n            LEI:\n            <input type=\"text\" name=\"lei\" onChange={this.handleChange} />\n          </label>\n\n          <div className=\"row\">Company Details:</div>\n\n          <label className=\"row\">\n            Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n          <label className=\"row\">\n            Surname:\n            <input type=\"text\" name=\"surname\" onChange={this.handleChange} />\n          </label>\n          <label className=\"row\">\n            e-mail:\n            <input type=\"text\" name=\"email\" onChange={this.handleChange} />\n          </label>\n\n          <div className=\"row\">\n            <input type=\"submit\" disabled={!this.state.isNextEnabled} />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);\n"]},"metadata":{},"sourceType":"module"}