{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass QueryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.stringNotEmpty = this.stringNotEmpty.bind(this);\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails\n    };\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    console.log(name + \" \" + value); // setInputs(values => ({...values, [name]: value}))\n\n    this.setState({\n      [name]: value\n    });\n\n    if (this.stringNotEmpty(this.state.LEI) || this.stringNotEmpty(this.state.companyCountry) && this.stringNotEmpty(this.state.companyName)) {\n      this.setState({\n        isNextEnabled: true\n      });\n    } else {\n      this.setState({\n        isNextEnabled: false\n      });\n    }\n  }\n\n  stringNotEmpty(s) {\n    return s !== null && s !== undefined && s.length > 0 && s !== \"\";\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      className: \"container\"\n    }, __jsx(\"label\", {\n      className: \"row\"\n    }, \"Company Name:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"companyName\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"Company Country:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"companyCountry\",\n      onChange: this.handleChange\n    })), __jsx(\"label\", {\n      className: \"row\"\n    }, \"LEI:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"LEI\",\n      onChange: this.handleChange\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/start-flow.js"],"names":["React","axios","Layout","connect","ValidateTable","QueryView","Component","constructor","props","state","companyName","companyCountry","LEI","isNextEnabled","handleChange","bind","stringNotEmpty","getInitialProps","reduxStore","req","userDetails","event","name","target","value","console","log","setState","s","undefined","length","render","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass QueryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.stringNotEmpty = this.stringNotEmpty.bind(this);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n    };\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    console.log(name + \" \" + value);\n    // setInputs(values => ({...values, [name]: value}))\n    this.setState({\n      [name]: value,\n    });\n    if (\n      this.stringNotEmpty(this.state.LEI) ||\n      (this.stringNotEmpty(this.state.companyCountry) &&\n        this.stringNotEmpty(this.state.companyName))\n    ) {\n      this.setState({\n        isNextEnabled: true,\n      });\n    }else{\n        this.setState({\n            isNextEnabled: false,\n          });\n    }\n  }\n\n  stringNotEmpty(s) {\n    return s !== null && s !== undefined && s.length > 0 && s !== \"\";\n  }\n\n  render() {\n    return (\n      <form className=\"container\">\n        <label className=\"row\">\n          Company Name:\n          <input type=\"text\" name=\"companyName\" onChange={this.handleChange} />\n        </label>\n        <label className=\"row\">\n          Company Country:\n          <input\n            type=\"text\"\n            name=\"companyCountry\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className=\"row\">\n          LEI:\n          <input type=\"text\" name=\"LEI\" onChange={this.handleChange} />\n        </label>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);\n"]},"metadata":{},"sourceType":"module"}