{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addUserToRegistry = this.addUserToRegistry.bind(this);\n    this.proceedToKeycloak = this.proceedToKeycloak.bind(this);\n    this.state = {\n      addedToRegistry: false\n    };\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n      selfLei: req.selfLei,\n      sessionId: req.sessionId,\n      keycloakUrl: req.keycloakRedirectURI\n    };\n  }\n\n  addUserToRegistry() {\n    let sessionId = this.props.sessionId;\n    const reqObj = {\n      sessionId: sessionId\n    };\n    axios.post(\"/registry/add\", reqObj).then(response => {\n      // console.log(response);\n      this.setState({\n        addedToRegistry: true\n      });\n    }).then(() => {\n      axios.post(\"/email/send\", {\n        sessionId: sessionId,\n        issueLink: \"thisisalink\"\n      }).then(response => {\n        // console.log(response);\n        console.log(\"email sent ok\");\n      });\n    }); //TODO add here the send email callback\n  }\n\n  proceedToKeycloak() {\n    console.log(\"proceed to keycloak\");\n    window.location.href = this.props.keycloakUrl;\n  }\n\n  render() {\n    let addToRegistryDiv = !this.state.addedToRegistry ? __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3 rem\"\n      }\n    }, __jsx(\"button\", {\n      onClick: this.addUserToRegistry\n    }, \"Register\")) : __jsx(\"div\", {\n      style: {\n        margin: \"3 rem 3 rem 3 rem 3 rem\"\n      }\n    }, \"Thank you for registering\");\n    return __jsx(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"3rem\"\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, \"Please review the attributes retrieved, presented below. If you are certain that these attributes correctly identify you please click the Next button. Additionally, if you would like you can  add your Company\\u2019s KYB profile in the public registry in an easily Verifiable Format? If you opt in for this feature the public profile of your organization will be easily verified by anyone (public authorities, B2B transactions etc.) greatly facilitating your dealings with these parties. If Yes, please click the \\u201CRegister\\u201D button\"), __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, \"Details:\"), __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, __jsx(ValidateTable, {\n      userDetails: this.props.userDetails\n    })), addToRegistryDiv, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, __jsx(\"button\", {\n      onClick: this.proceedToKeycloak\n    }, \"Finish\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/registry-prompt.js"],"names":["React","axios","Layout","connect","ValidateTable","Wizard","Component","constructor","props","addUserToRegistry","bind","proceedToKeycloak","state","addedToRegistry","getInitialProps","reduxStore","req","userDetails","selfLei","sessionId","keycloakUrl","keycloakRedirectURI","reqObj","post","then","response","setState","issueLink","console","log","window","location","href","render","addToRegistryDiv","marginBottom","margin","marginTop","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addUserToRegistry = this.addUserToRegistry.bind(this);\n    this.proceedToKeycloak = this.proceedToKeycloak.bind(this);\n    this.state = {\n      addedToRegistry: false,\n    };\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n      selfLei: req.selfLei,\n      sessionId: req.sessionId,\n      keycloakUrl: req.keycloakRedirectURI,\n    };\n  }\n\n  addUserToRegistry() {\n    let sessionId = this.props.sessionId;\n    const reqObj = { sessionId: sessionId };\n    axios.post(\"/registry/add\", reqObj).then((response) => {\n      // console.log(response);\n      this.setState({\n        addedToRegistry: true,\n      });\n    }).then( () =>{\n      axios.post(\"/email/send\", {sessionId: sessionId, issueLink:\"thisisalink\"}).then((response) => {\n        // console.log(response);\n        console.log(\"email sent ok\")\n    })});\n    //TODO add here the send email callback\n  }\n\n  proceedToKeycloak() {\n    console.log(\"proceed to keycloak\");\n    window.location.href = this.props.keycloakUrl;\n  }\n\n  render() {\n    let addToRegistryDiv = !this.state.addedToRegistry ? (\n      <div className=\"row\" style={{ marginBottom: \"3 rem\" }}>\n        <button onClick={this.addUserToRegistry}>Register</button>\n      </div>\n    ) : (\n      <div style={{ margin: \"3 rem 3 rem 3 rem 3 rem\" }}>\n        Thank you for registering\n      </div>\n    );\n\n    return (\n      <div className=\"container\" style={{ marginTop: \"3rem\" }}>\n        {/* <ValidateTable userDetails={this.props.userDetails}></ValidateTable> */}\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Please review the attributes retrieved, presented below. If you are\n          certain that these attributes correctly identify you please click the\n          Next button. Additionally, if you would like you can  add your Company’s KYB\n          profile in the public registry in an easily Verifiable Format? If you\n          opt in for this feature the public profile of your organization will\n          be easily verified by anyone (public authorities, B2B transactions\n          etc.) greatly facilitating your dealings with these parties. If Yes,\n          please click the “Register” button\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Details:\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <ValidateTable userDetails={this.props.userDetails}></ValidateTable>\n        </div>\n\n        {addToRegistryDiv}\n\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <button onClick={this.proceedToKeycloak}>Finish</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);\n"]},"metadata":{},"sourceType":"module"}