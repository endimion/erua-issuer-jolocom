{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nclass IssueEidas extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {};\n  }\n\n  render() {\n    __jsx(\"div\", null, \"Hey\");\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);","map":{"version":3,"sources":["/home/ni/code/js/jolo-issuer-v2/pages/vc/issue/eidas.js"],"names":["React","axios","connect","IssueEidas","Component","constructor","props","getInitialProps","reduxStore","req","render","mapStateToProps","state","isFetching","fetching","qrData","sessionData","userSelection","baseUrl","DID","serverSessionId","uuid","vcSent","sealSession","eidasUri","eidasPort","endpoint","eidasRedirectUri","credQROffer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAE2B,eAAfC,eAAe,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAAsB;AAE9C;AACA;AACA,WAAO,EAAP;AAED;;AAEHC,EAAAA,MAAM,GAAG;AACL;AAGH;;AAjBoC;;AAoBzC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACE,QADb;AAELC,IAAAA,MAAM,EAAEH,KAAK,CAACG,MAFT;AAGLC,IAAAA,WAAW,EAAEJ,KAAK,CAACI,WAHd;AAILC,IAAAA,aAAa,EAAEL,KAAK,CAACK,aAJhB;AAI+B;AACpCC,IAAAA,OAAO,EAAEN,KAAK,CAACM,OALV;AAMLC,IAAAA,GAAG,EAAEP,KAAK,CAACO,GANN;AAOLC,IAAAA,eAAe,EAAER,KAAK,CAACQ,eAPlB;AAQLC,IAAAA,IAAI,EAAET,KAAK,CAACS,IARP;AASLC,IAAAA,MAAM,EAAEV,KAAK,CAACU,MATT;AAULC,IAAAA,WAAW,EAAEX,KAAK,CAACW,WAVd;AAWLC,IAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAXX;AAYLC,IAAAA,SAAS,EAAEb,KAAK,CAACa,SAZZ;AAaLC,IAAAA,QAAQ,EAAEd,KAAK,CAACc,QAbX;AAcLC,IAAAA,gBAAgB,EAAEf,KAAK,CAACe,gBAdnB;AAeLC,IAAAA,WAAW,EAAEhB,KAAK,CAACgB;AAfd,GAAP;AAiBD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AAGD,CAJD;;AAMA,eAAe5B,OAAO,CAACS,eAAD,EAAkBkB,kBAAlB,CAAP,CAA6C1B,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\n\n\nclass IssueEidas extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    static async getInitialProps({ reduxStore, req }) {\n        \n        //returned value here is getting mered with the mapstatetoprops\n        // mapstatetoprops overrides these values if they match\n        return {\n        };\n      }\n\n    render() {\n        <div>\n            Hey\n        </div>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      isFetching: state.fetching,\n      qrData: state.qrData,\n      sessionData: state.sessionData,\n      userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n      baseUrl: state.baseUrl,\n      DID: state.DID,\n      serverSessionId: state.serverSessionId,\n      uuid: state.uuid,\n      vcSent: state.vcSent,\n      sealSession: state.sealSession,\n      eidasUri: state.eidasUri,\n      eidasPort: state.eidasPort,\n      endpoint: state.endpoint,\n      eidasRedirectUri: state.eidasRedirectUri,\n      credQROffer: state.credQROffer,\n    };\n  }\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n     \n    };\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);"]},"metadata":{},"sourceType":"module"}