{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nvar QueryView = /*#__PURE__*/function (_React$Component) {\n  _inherits(QueryView, _React$Component);\n\n  var _super = _createSuper(QueryView);\n\n  function QueryView(props) {\n    var _this;\n\n    _classCallCheck(this, QueryView);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"clicked submit\");\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.stringNotEmpty = _this.stringNotEmpty.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QueryView, [{\n    key: \"handleChange\",\n    value: function () {\n      var _handleChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var name, value;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                name = event.target.name;\n                value = event.target.value;\n                console.log(name + \" \" + value); // setInputs(values => ({...values, [name]: value}))\n\n                _context2.next = 5;\n                return this.setState(_defineProperty({}, name, value));\n\n              case 5:\n                if (this.stringNotEmpty(this.state.LEI) || this.stringNotEmpty(this.state.companyCountry) && this.stringNotEmpty(this.state.companyName)) {\n                  this.setState({\n                    isNextEnabled: true\n                  });\n                } else {\n                  this.setState({\n                    isNextEnabled: false\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleChange(_x2) {\n        return _handleChange.apply(this, arguments);\n      }\n\n      return handleChange;\n    }()\n  }, {\n    key: \"stringNotEmpty\",\n    value: function stringNotEmpty(s) {\n      if (s) {\n        var result = s.length > 0;\n        console.log(\"not empty \".concat(s, \":: \").concat(result));\n        return result;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"label\", {\n        className: \"row\"\n      }, \"Company Name:\", __jsx(\"input\", {\n        type: \"text\",\n        name: \"companyName\",\n        onChange: this.handleChange\n      })), __jsx(\"label\", {\n        className: \"row\"\n      }, \"Company Country:\", __jsx(\"input\", {\n        type: \"text\",\n        name: \"companyCountry\",\n        onChange: this.handleChange\n      })), __jsx(\"label\", {\n        className: \"row\"\n      }, \"LEI:\", __jsx(\"input\", {\n        type: \"text\",\n        name: \"LEI\",\n        onChange: this.handleChange\n      })), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"input\", {\n        type: \"submit\",\n        disabled: !this.state.isNextEnabled\n      }, \"Next\", \" \"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2) {\n        var reduxStore, req;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                reduxStore = _ref2.reduxStore, req = _ref2.req;\n                return _context3.abrupt(\"return\", {\n                  userDetails: req.userDetails\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return QueryView;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/company-selection.js"],"names":["React","axios","Layout","connect","ValidateTable","QueryView","props","event","preventDefault","console","log","state","companyName","companyCountry","LEI","isNextEnabled","handleChange","bind","handleSubmit","stringNotEmpty","name","target","value","setState","s","result","length","reduxStore","req","userDetails","Component","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass QueryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyName: null,\n      companyCountry: null,\n      LEI: null,\n      isNextEnabled: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.stringNotEmpty = this.stringNotEmpty.bind(this);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n    };\n  }\n\n  async handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    console.log(name + \" \" + value);\n    // setInputs(values => ({...values, [name]: value}))\n    await this.setState({\n      [name]: value,\n    });\n    if (\n      this.stringNotEmpty(this.state.LEI) ||\n      (this.stringNotEmpty(this.state.companyCountry) &&\n        this.stringNotEmpty(this.state.companyName))\n    ) {\n      this.setState({\n        isNextEnabled: true,\n      });\n    } else {\n      this.setState({\n        isNextEnabled: false,\n      });\n    }\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(`clicked submit`);\n  };\n\n  stringNotEmpty(s) {\n    if (s) {\n      let result = s.length > 0;\n      console.log(`not empty ${s}:: ${result}`);\n\n      return result;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit}>\n          <label className=\"row\">\n            Company Name:\n            <input\n              type=\"text\"\n              name=\"companyName\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"row\">\n            Company Country:\n            <input\n              type=\"text\"\n              name=\"companyCountry\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"row\">\n            LEI:\n            <input type=\"text\" name=\"LEI\" onChange={this.handleChange} />\n          </label>\n          <div className=\"row\">\n            <input type=\"submit\" disabled={!this.state.isNextEnabled}>\n              Next{\" \"}\n            </input>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryView);\n"]},"metadata":{},"sourceType":"module"}