{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport axios from \"axios\";\nimport UserSelection from \"./model/userSelection\";\nconst initialState = {\n  count: 0,\n  qrData: null,\n  fetching: false,\n  requestSignature: null,\n  sessionData: null,\n  serverSessionId: null,\n  sessionId: null,\n  uuid: null,\n  vcSent: false,\n  userSelection: [],\n  // the attributes selected by the user to be included in a VC,\n  endpoint: null,\n  // the backend server url root.\n  cardIndex: 1,\n  stepperSteps: [],\n  baseUrl: \"\",\n  DID: false,\n  //boolean, denoting that DID connection response has been received for this session\n  sealSession: \"\",\n  didAuthCallback: \"\",\n  // callback address set by the caller to redirect to after DID auth,\n  eidasUri: \"\",\n  eidasPort: \"\",\n  eidasRedirectUri: \"\",\n  edugainUri: \"\",\n  edugainPort: \"\",\n  edugainRedirectUri: \"\",\n  vcFailed: false,\n  credQROffer: \"\"\n};\nexport const actionTypes = {\n  GET_QR_AUTH_RESPONSE: \"GET_QR_AUTH_RESPONSE\",\n  MAKE_QR_AUTH_REQUEST: \"MAKE_QR_AUTH_REQUEST\",\n  MAKE_VC_QR_REQUEST: \"MAKE_VC_QR_REQUEST\",\n  //make a request to generate a VC based on the selected attributes\n  GET_VC_QR_RESPONSE: \"GET_VC_QR_REQUEST\",\n  SET_ATTRIBUTES_SELECTION: \"SET_ATTRIBUTES_SELECTION\",\n  //adds an array as the user  selected attirubtes\n  ADD_SET_TO_ATTRIBUTES_SELECTION: \"ADD_SET_TO_ATTRIBUTES_SELECTION\",\n  //adds the payload to the userSelection\n  ADD_ATTRIBUTES_TO_SELECTION: \"ADD_ATTRIBUTES_TO_SELECTION\",\n  //adds the payload to the userSelection\n  // the selection takes place using identifiers from the session\n  // that are meaningful to the backend\n  REMOVE_ATTRIBUTE_FROM_SELECTION: \"REMOVE_ATTRIBUTE_FROM_SELECTION\",\n  SET_SERVER_SESSION_DATA: \"SET_SERVER_SESSION_DATA\",\n  SET_SERVER_SESSION_ID: \"SET_SERVER_SESSION_ID\",\n  VC_SENT_TO_USER: \"VC_SENT_TO_USER\",\n  SET_ENDPOINT: \"SET_END_POINT\",\n  //\n  INCREASE_CARD_INDEX: \"INCREASE_CARD_INDEX\",\n  DECREASE_CARD_INDEX: \"DECREASE_CARD_INDEX\",\n  //\n  SET_STEPPER_STEPS: \"SET_STEPPER_STEPS\",\n  //\n  SET_BASE_URL: \"SET_BASE_URL\",\n  //\n  SET_DID_TRUE: \"SES_DID_TRUE\",\n  SET_SEAL_SESSION: \"SET_SEAL_SESSION\",\n  SET_SESSION_ID: \"SET_SE\",\n  SET_CALLBACK: \"SET_CALLBACK\",\n  SET_EIDAS_URI_PORT: \"SET_EIDAS_URI_PORT\",\n  SET_EIDAS_REDIRECT_URI: \"SET_EIDAS_REDIRECT_URI\",\n  SET_EDUGAIN_URI_PORT: \"SET_EDUGAIN_URI_PORT\",\n  SET_EDUGAIN_REDIRECT_URI: \"SET_EDUGAIN_REDIRECT_URI\",\n  VC_ISSUE_FAILED: \"VC_ISSUE_FAILED\",\n  JOLO_VC_GENERATED: \"JOLO_VC_GENERATED\"\n}; // REDUCERS\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.JOLO_VC_GENERATED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        credQROffer: action.data\n      });\n\n    case actionTypes.VC_ISSUE_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        vcFailed: true\n      });\n\n    case actionTypes.SET_EDUGAIN_REDIRECT_URI:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        edugainRedirectUri: action.data\n      });\n\n    case actionTypes.SET_EDUGAIN_URI_PORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        edugainUri: action.data.uri,\n        edugainPort: action.data.port\n      });\n\n    case actionTypes.SET_EIDAS_REDIRECT_URI:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        eidasRedirectUri: action.data\n      });\n\n    case actionTypes.SET_EIDAS_URI_PORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        eidasUri: action.data.uri,\n        eidasPort: action.data.port\n      });\n\n    case actionTypes.SET_CALLBACK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        didAuthCallback: action.data\n      });\n\n    case actionTypes.SET_SEAL_SESSION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sealSession: action.data\n      });\n\n    case actionTypes.SET_SESSION_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sessionId: action.data\n      });\n\n    case actionTypes.SET_DID_TRUE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        DID: true,\n        uuid: action.data\n      });\n\n    case actionTypes.SET_BASE_URL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        baseUrl: action.data\n      });\n\n    case actionTypes.SET_STEPPER_STEPS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stepperSteps: action.data\n      });\n\n    case actionTypes.INCREASE_CARD_INDEX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cardIndex: state.cardIndex + 1\n      });\n\n    case actionTypes.DECREASE_CARD_INDEX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cardIndex: state.cardIndex - 1\n      });\n\n    case actionTypes.SET_ENDPOINT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        endpoint: action.data\n      });\n\n    case actionTypes.VC_SENT_TO_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        vcSent: true\n      });\n\n    case actionTypes.SET_SERVER_SESSION_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sessionData: action.data // userEduGain: action.data.eduGAIN,\n        // userEidas: action.data.eidas,\n\n      });\n\n    case actionTypes.GET_QR_AUTH_RESPONSE:\n      // console.log(action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: false,\n        qrData: action.data.qr,\n        uuid: action.data.uuid,\n        requestSignature: action.data.signature\n      });\n\n    case actionTypes.SET_ATTRIBUTES_SELECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userSelection: action.data\n      });\n\n    case actionTypes.MAKE_QR_AUTH_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: true,\n        vcSent: false\n      });\n\n    case actionTypes.ADD_ATTRIBUTES_TO_SELECTION:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userSelection: [...state.userSelection, action.data]\n        });\n      }\n\n    case actionTypes.ADD_SET_TO_ATTRIBUTES_SELECTION:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userSelection: [...state.userSelection, ...action.data]\n        });\n      }\n\n    case actionTypes.SET_SERVER_SESSION_ID:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          serverSessionId: action.data\n        });\n      }\n\n    case actionTypes.REMOVE_ATTRIBUTE_FROM_SELECTION:\n      let newSelection = [...state.userSelection.filter((el, ind) => {\n        return ind !== action.index;\n      })];\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userSelection: newSelection\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\n\nexport function loginClicked() {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.MAKE_QR_AUTH_REQUEST\n    });\n    axios.get(\"connectionRequest\").then(data => {\n      console.log(\"got the data form the server\");\n      console.log(data.data);\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data\n      });\n    });\n  }; // return dispatch => axios.get('https://38da089e.ngrok.io/connectionRequest')\n  //     .then(({ data }) => data)\n  //     .then(items => dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST, items }))\n  //     .then( () =>{\n  //       console.log(\"got there\")\n  //         return dispatch({ type: actionTypes.GET_QR_AUTH_RESPONSE, data:'these are my awesome data' })\n  //     });\n} // export function setDIDTrue() {\n//   return dispatch => {\n//     dispatch({\n//       type: actionTypes.SET_DID_TRUE\n//     });\n//   };\n// }\n\nexport function setStepperSteps(steps) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_STEPPER_STEPS,\n      data: steps\n    });\n  };\n}\nexport function setBaseUrl(baseUrl) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_BASE_URL,\n      data: baseUrl\n    });\n  };\n}\nexport function startSession(sessionId, sessionStatus) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.START_SESSION,\n      data: {\n        sessionId: sessionId,\n        status: sessionStatus\n      }\n    });\n  };\n}\nexport function setServerSessionId(sessionId) {\n  return dispatch => {\n    // console.log(\"store.js setServerSessionId with \" +sessionId)\n    dispatch({\n      type: actionTypes.SET_SERVER_SESSION_ID,\n      data: sessionId\n    });\n  };\n}\nexport function setSessionData(sessionData) {\n  return dispatch => {\n    // console.log(`store.js setSessionData called with::`);\n    // console.log(sessionData)\n    dispatch({\n      type: actionTypes.SET_SERVER_SESSION_DATA,\n      data: sessionData\n    });\n  };\n}\nexport function setUserAttributeSelection(selectedAttributes) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_ATTRIBUTES_SELECTION,\n      data: selectedAttributes\n    });\n  };\n}\nexport function updateSession(sessionStatus) {\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.UPDATE_SESSION,\n      data: {\n        status: sessionStatus\n      }\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function setEndpoint(endpoint) {\n  console.log(\"store.js setting endpoint to \" + endpoint);\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.SET_ENDPOINT,\n      data: endpoint\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function addToSelection(index, source) {\n  // console.log(`store.js:: will add to seleciton ${index} , ${source}`);\n  const data = new UserSelection(index, source);\n  return dispatch => {\n    dispatch({\n      type: actionTypes.ADD_ATTRIBUTES_TO_SELECTION,\n      data: data\n    });\n  };\n}\nexport function addSetToSelection(setArray) {\n  const data = [];\n  setArray.forEach(attrObj => {\n    Object.keys(attrObj).map(key => {\n      // console.log(`will fetch key ${key} from` )\n      data.push(new UserSelection(key, attrObj.source));\n      return new UserSelection(key, attrObj[key]);\n    });\n  });\n  return dispatch => {\n    dispatch({\n      type: actionTypes.ADD_SET_TO_ATTRIBUTES_SELECTION,\n      data: data\n    });\n  };\n}\nexport function removeFromSelection(index) {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.REMOVE_ATTRIBUTE_FROM_SELECTION,\n      index: index\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function vcSentToUser() {\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.VC_SENT_TO_USER\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function increaseCardIndex() {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.INCREASE_CARD_INDEX\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function decreaseCardIndex() {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return dispatch => {\n    let toDispatch = {\n      type: actionTypes.DECREASE_CARD_INDEX\n    };\n    dispatch(toDispatch);\n  };\n}\nexport function requestVCgeneration(url, selectedAttributes, vcType, isMobile = false) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.MAKE_QR_AUTH_REQUEST\n    });\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"data\", selectedAttributes);\n    console.log(\"store.js - requestVCgeneration:: will make VC generation request\");\n    console.log(`store.js - requestVCgeneration:: for the url ${url}`); // console.log(`store.js - requestVCgeneration:: with data`)\n    // console.log(selectedAttributes);\n    // console.log(isMobile);\n\n    axios.post(url, {\n      data: selectedAttributes,\n      vcType: vcType,\n      isMobile: isMobile\n    }).then(data => {\n      console.log(\"store.js- requestVCgeneration:: got the data form the server\");\n      console.log(data.data);\n      console.log(\"store.js- requestVCgeneration:: got vcType\");\n      console.log(vcType);\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data,\n        vcType: vcType\n      });\n    });\n  };\n}\nexport function makeConnectionRequest() {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.MAKE_QR_AUTH_REQUEST\n    });\n    axios.post(\"/makeConnectionRequest\", {}).then(data => {\n      console.log(\"store.js:: makeConnectionRequest got the data form the server\");\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data\n      });\n    });\n  };\n}\nexport function completeDIDAuth(uuid) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_DID_TRUE,\n      data: uuid\n    });\n  };\n}\nexport function makeAndPushVC(url, selectedAttributes, vcType, sealSession, isMobile = false) {\n  return dispatch => {\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"data\", selectedAttributes);\n    console.log(\"store.js - makeAndPushVC:: will make VC generation request\");\n    console.log(`store.js :: makeandpushVC:: ${url}, and ${vcType}`);\n    axios.post(url, {\n      data: selectedAttributes,\n      sealSession: sealSession,\n      vcType: vcType,\n      isMobile: isMobile\n    }).then(data => {\n      console.log(\"store.js- makeAndPushVC:: got the data form the server\");\n      dispatch({\n        type: actionTypes.VC_SENT_TO_USER\n      });\n    }).catch(err => {\n      console.log(\"store.js- makeAndPushVC:: ERROR\");\n      console.log(err);\n      dispatch({\n        type: actionTypes.VC_ISSUE_FAILED\n      });\n    }); //TODO add here an action denoting that the VC was sent\n  };\n} // export function makeAndPushVCJolo(\n//   url,\n//   selectedAttributes,\n//   vcType,\n//   sealSession,\n//   isMobile = false\n// ) {\n//   return (dispatch) => {\n//     let bodyFormData = new FormData();\n//     bodyFormData.set(\"data\", selectedAttributes);\n//     axios\n//       .post(url, {\n//         data: selectedAttributes,\n//         sealSession: sealSession,\n//         vcType: vcType,\n//         isMobile: isMobile,\n//       })\n//       .then((resp) => {\n//         console.log(resp)\n//         dispatch({ type: actionTypes.JOLO_VC_GENERATED, data: resp.data.qr });\n//       })\n//       .catch((err) => {\n//         console.log(\"store.js- makeAndPushVC:: ERROR\");\n//         console.log(err);\n//         dispatch({ type: actionTypes.VC_ISSUE_FAILED });\n//       });\n//   };\n// }\n\nexport function requestVC(url, vcType, sessionId, isMobile = false) {\n  return dispatch => {\n    axios.post(url, {\n      sessionId: sessionId,\n      vcType: vcType,\n      isMobile: isMobile\n    }).then(resp => {\n      console.log(\"store.js requestVC_response\");\n      console.log(resp);\n      dispatch({\n        type: actionTypes.JOLO_VC_GENERATED,\n        data: resp.data.qr\n      });\n    }).catch(err => {\n      console.log(\"store.js- makeAndPushVC:: ERROR\");\n      console.log(err);\n      dispatch({\n        type: actionTypes.VC_ISSUE_FAILED\n      });\n    });\n  };\n}\nexport function setSealSession(sessionId) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_SEAL_SESSION,\n      data: sessionId\n    });\n  };\n}\nexport function setSessionId(sessionId) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_SESSION_ID,\n      data: sessionId\n    });\n  };\n}\nexport function makeSealSession(baseUrl) {\n  console.log(\"store:: makeSealSession\");\n  return dispatch => {\n    axios.post(`${baseUrl}seal/start-session`, {}).then(resp => {\n      console.log(\"store.js:: makeSealSession\"); // console.log(resp.data);\n\n      return dispatch({\n        type: actionTypes.SET_SEAL_SESSION,\n        data: resp.data\n      });\n    });\n  };\n}\nexport function makeOnlyConnectionRequest(sealSession, baseUrl, vcType = \"didAuth\", isMobile) {\n  let postData = {\n    sealSession: sealSession,\n    vcType: vcType\n  };\n\n  if (isMobile) {\n    postData.isMobile = isMobile;\n  }\n\n  return dispatch => {\n    dispatch({\n      type: actionTypes.MAKE_QR_AUTH_REQUEST\n    });\n    axios.post(`${baseUrl}/makeConnectionRequest`, postData).then(data => {\n      console.log(\"store.js -- onlyConnectionRequest:: got the data form the server\");\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data\n      });\n    });\n  };\n}\nexport function makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile) {\n  console.log(`store.js:: makeSealSessionWithDIDConnecetionRequest  the base url is-->${baseUrl}<--`);\n  return dispatch => {\n    let sessionId = \"\";\n    let postUrl = baseUrl ? `${baseUrl}seal/start-session` : `/seal/start-session`;\n    axios.post(postUrl, {}).then(resp => {\n      sessionId = resp.data;\n      return dispatch({\n        type: actionTypes.SET_SEAL_SESSION,\n        data: resp.data\n      });\n    }).then(obj => {\n      // console.log(\"makeSealSessionWithDIDConnecetionRequest\")\n      console.log(`isMobile? ${isMobile}`);\n      let postUrl = baseUrl ? `${baseUrl}makeConnectionRequest` : `/makeConnectionRequest`;\n      axios.post(postUrl, {\n        sealSession: sessionId,\n        baseUrl: baseUrl,\n        vcType: vcType,\n        isMobile: isMobile\n      }).then(data => {\n        return dispatch({\n          type: actionTypes.GET_QR_AUTH_RESPONSE,\n          data: data.data\n        });\n      });\n    });\n  };\n}\nexport function setDidCallback(callback) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_CALLBACK,\n      data: callback\n    });\n  };\n}\nexport function setEidasUriPort(uri, port) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_EIDAS_URI_PORT,\n      data: {\n        uri: uri,\n        port: port\n      }\n    });\n  };\n}\nexport function setEidasRedirectUri(uri) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_EIDAS_REDIRECT_URI,\n      data: uri\n    });\n  };\n}\nexport function setEdugainRedirectUri(uri) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_EDUGAIN_REDIRECT_URI,\n      data: uri\n    });\n  };\n}\nexport function setEdugainUriPort(uri, port) {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_EDUGAIN_URI_PORT,\n      data: {\n        uri: uri,\n        port: port\n      }\n    });\n  };\n}\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","axios","UserSelection","initialState","count","qrData","fetching","requestSignature","sessionData","serverSessionId","sessionId","uuid","vcSent","userSelection","endpoint","cardIndex","stepperSteps","baseUrl","DID","sealSession","didAuthCallback","eidasUri","eidasPort","eidasRedirectUri","edugainUri","edugainPort","edugainRedirectUri","vcFailed","credQROffer","actionTypes","GET_QR_AUTH_RESPONSE","MAKE_QR_AUTH_REQUEST","MAKE_VC_QR_REQUEST","GET_VC_QR_RESPONSE","SET_ATTRIBUTES_SELECTION","ADD_SET_TO_ATTRIBUTES_SELECTION","ADD_ATTRIBUTES_TO_SELECTION","REMOVE_ATTRIBUTE_FROM_SELECTION","SET_SERVER_SESSION_DATA","SET_SERVER_SESSION_ID","VC_SENT_TO_USER","SET_ENDPOINT","INCREASE_CARD_INDEX","DECREASE_CARD_INDEX","SET_STEPPER_STEPS","SET_BASE_URL","SET_DID_TRUE","SET_SEAL_SESSION","SET_SESSION_ID","SET_CALLBACK","SET_EIDAS_URI_PORT","SET_EIDAS_REDIRECT_URI","SET_EDUGAIN_URI_PORT","SET_EDUGAIN_REDIRECT_URI","VC_ISSUE_FAILED","JOLO_VC_GENERATED","reducer","state","action","type","data","uri","port","qr","signature","newSelection","filter","el","ind","index","loginClicked","dispatch","get","then","console","log","setStepperSteps","steps","setBaseUrl","startSession","sessionStatus","START_SESSION","status","setServerSessionId","setSessionData","setUserAttributeSelection","selectedAttributes","updateSession","toDispatch","UPDATE_SESSION","setEndpoint","addToSelection","source","addSetToSelection","setArray","forEach","attrObj","Object","keys","map","key","push","removeFromSelection","vcSentToUser","increaseCardIndex","decreaseCardIndex","requestVCgeneration","url","vcType","isMobile","bodyFormData","FormData","set","post","makeConnectionRequest","completeDIDAuth","makeAndPushVC","catch","err","requestVC","resp","setSealSession","setSessionId","makeSealSession","makeOnlyConnectionRequest","postData","makeSealSessionWithDIDConnecetionRequest","postUrl","obj","setDidCallback","callback","setEidasUriPort","setEidasRedirectUri","setEdugainRedirectUri","setEdugainUriPort","initializeStore","preloadedState"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport axios from \"axios\";\nimport UserSelection from \"./model/userSelection\";\n\nconst initialState = {\n  count: 0,\n  qrData: null,\n  fetching: false,\n  requestSignature: null,\n  sessionData: null,\n  serverSessionId: null,\n  sessionId: null,\n  uuid: null,\n  vcSent: false,\n  userSelection: [], // the attributes selected by the user to be included in a VC,\n  endpoint: null, // the backend server url root.\n  cardIndex: 1,\n  stepperSteps: [],\n  baseUrl: \"\",\n  DID: false, //boolean, denoting that DID connection response has been received for this session\n  sealSession: \"\",\n  didAuthCallback: \"\", // callback address set by the caller to redirect to after DID auth,\n  eidasUri: \"\",\n  eidasPort: \"\",\n  eidasRedirectUri: \"\",\n\n  edugainUri: \"\",\n  edugainPort: \"\",\n  edugainRedirectUri: \"\",\n  vcFailed: false,\n  credQROffer: \"\",\n  \n};\n\nexport const actionTypes = {\n  GET_QR_AUTH_RESPONSE: \"GET_QR_AUTH_RESPONSE\",\n  MAKE_QR_AUTH_REQUEST: \"MAKE_QR_AUTH_REQUEST\",\n\n  MAKE_VC_QR_REQUEST: \"MAKE_VC_QR_REQUEST\", //make a request to generate a VC based on the selected attributes\n  GET_VC_QR_RESPONSE: \"GET_VC_QR_REQUEST\",\n\n  SET_ATTRIBUTES_SELECTION: \"SET_ATTRIBUTES_SELECTION\", //adds an array as the user  selected attirubtes\n  ADD_SET_TO_ATTRIBUTES_SELECTION: \"ADD_SET_TO_ATTRIBUTES_SELECTION\", //adds the payload to the userSelection\n  ADD_ATTRIBUTES_TO_SELECTION: \"ADD_ATTRIBUTES_TO_SELECTION\", //adds the payload to the userSelection\n  // the selection takes place using identifiers from the session\n  // that are meaningful to the backend\n  REMOVE_ATTRIBUTE_FROM_SELECTION: \"REMOVE_ATTRIBUTE_FROM_SELECTION\",\n\n  SET_SERVER_SESSION_DATA: \"SET_SERVER_SESSION_DATA\",\n  SET_SERVER_SESSION_ID: \"SET_SERVER_SESSION_ID\",\n  VC_SENT_TO_USER: \"VC_SENT_TO_USER\",\n  SET_ENDPOINT: \"SET_END_POINT\",\n\n  //\n  INCREASE_CARD_INDEX: \"INCREASE_CARD_INDEX\",\n  DECREASE_CARD_INDEX: \"DECREASE_CARD_INDEX\",\n  //\n  SET_STEPPER_STEPS: \"SET_STEPPER_STEPS\",\n  //\n  SET_BASE_URL: \"SET_BASE_URL\",\n\n  //\n  SET_DID_TRUE: \"SES_DID_TRUE\",\n\n  SET_SEAL_SESSION: \"SET_SEAL_SESSION\",\n  SET_SESSION_ID: \"SET_SE\",\n\n  SET_CALLBACK: \"SET_CALLBACK\",\n  SET_EIDAS_URI_PORT: \"SET_EIDAS_URI_PORT\",\n  SET_EIDAS_REDIRECT_URI: \"SET_EIDAS_REDIRECT_URI\",\n\n  SET_EDUGAIN_URI_PORT: \"SET_EDUGAIN_URI_PORT\",\n  SET_EDUGAIN_REDIRECT_URI: \"SET_EDUGAIN_REDIRECT_URI\",\n\n  VC_ISSUE_FAILED: \"VC_ISSUE_FAILED\",\n\n  JOLO_VC_GENERATED: \"JOLO_VC_GENERATED\",\n};\n\n// REDUCERS\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actionTypes.JOLO_VC_GENERATED:\n      return {...state, credQROffer: action.data}\n\n    case actionTypes.VC_ISSUE_FAILED:\n      return {...state, vcFailed: true}\n      \n    case actionTypes.SET_EDUGAIN_REDIRECT_URI:\n      return {\n        ...state,\n        edugainRedirectUri: action.data,\n      };\n\n    case actionTypes.SET_EDUGAIN_URI_PORT:\n      return {\n        ...state,\n        edugainUri: action.data.uri,\n        edugainPort: action.data.port,\n      };\n\n    case actionTypes.SET_EIDAS_REDIRECT_URI:\n      return {\n        ...state,\n        eidasRedirectUri: action.data,\n      };\n\n    case actionTypes.SET_EIDAS_URI_PORT:\n      return {\n        ...state,\n        eidasUri: action.data.uri,\n        eidasPort: action.data.port,\n      };\n\n    case actionTypes.SET_CALLBACK:\n      return {\n        ...state,\n        didAuthCallback: action.data,\n      };\n\n    case actionTypes.SET_SEAL_SESSION:\n      return {\n        ...state,\n        sealSession: action.data,\n      };\n\n      case actionTypes.SET_SESSION_ID:\n        return {\n          ...state,\n          sessionId: action.data,\n        };\n\n    case actionTypes.SET_DID_TRUE:\n      return {\n        ...state,\n        DID: true,\n        uuid: action.data,\n      };\n\n    case actionTypes.SET_BASE_URL:\n      return {\n        ...state,\n        baseUrl: action.data,\n      };\n\n    case actionTypes.SET_STEPPER_STEPS:\n      return {\n        ...state,\n        stepperSteps: action.data,\n      };\n\n    case actionTypes.INCREASE_CARD_INDEX:\n      return {\n        ...state,\n        cardIndex: state.cardIndex + 1,\n      };\n\n    case actionTypes.DECREASE_CARD_INDEX:\n      return {\n        ...state,\n        cardIndex: state.cardIndex - 1,\n      };\n\n    case actionTypes.SET_ENDPOINT:\n      return {\n        ...state,\n        endpoint: action.data,\n      };\n    case actionTypes.VC_SENT_TO_USER:\n      return {\n        ...state,\n        vcSent: true,\n      };\n    case actionTypes.SET_SERVER_SESSION_DATA:\n      return {\n        ...state,\n        sessionData: action.data,\n        // userEduGain: action.data.eduGAIN,\n        // userEidas: action.data.eidas,\n      };\n    case actionTypes.GET_QR_AUTH_RESPONSE:\n      // console.log(action.data);\n      return {\n        ...state,\n        fetching: false,\n        qrData: action.data.qr,\n        uuid: action.data.uuid,\n        requestSignature: action.data.signature,\n      };\n\n    case actionTypes.SET_ATTRIBUTES_SELECTION:\n      return {\n        ...state,\n        userSelection: action.data,\n      };\n\n    case actionTypes.MAKE_QR_AUTH_REQUEST:\n      return {\n        ...state,\n        fetching: true,\n        vcSent: false,\n      };\n\n    case actionTypes.ADD_ATTRIBUTES_TO_SELECTION: {\n      return {\n        ...state,\n        userSelection: [...state.userSelection, action.data],\n      };\n    }\n\n    case actionTypes.ADD_SET_TO_ATTRIBUTES_SELECTION: {\n      return {\n        ...state,\n        userSelection: [...state.userSelection, ...action.data],\n      };\n    }\n\n    case actionTypes.SET_SERVER_SESSION_ID: {\n      return {\n        ...state,\n        serverSessionId: action.data,\n      };\n    }\n\n    case actionTypes.REMOVE_ATTRIBUTE_FROM_SELECTION:\n      let newSelection = [\n        ...state.userSelection.filter((el, ind) => {\n          return ind !== action.index;\n        }),\n      ];\n      return {\n        ...state,\n        userSelection: newSelection,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// ACTIONS\n\nexport function loginClicked() {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST });\n    axios.get(\"connectionRequest\").then((data) => {\n      console.log(\"got the data form the server\");\n      console.log(data.data);\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data,\n      });\n    });\n  };\n  // return dispatch => axios.get('https://38da089e.ngrok.io/connectionRequest')\n  //     .then(({ data }) => data)\n  //     .then(items => dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST, items }))\n  //     .then( () =>{\n  //       console.log(\"got there\")\n  //         return dispatch({ type: actionTypes.GET_QR_AUTH_RESPONSE, data:'these are my awesome data' })\n  //     });\n}\n\n// export function setDIDTrue() {\n//   return dispatch => {\n//     dispatch({\n//       type: actionTypes.SET_DID_TRUE\n//     });\n//   };\n// }\n\nexport function setStepperSteps(steps) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_STEPPER_STEPS,\n      data: steps,\n    });\n  };\n}\n\nexport function setBaseUrl(baseUrl) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_BASE_URL,\n      data: baseUrl,\n    });\n  };\n}\n\nexport function startSession(sessionId, sessionStatus) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.START_SESSION,\n      data: { sessionId: sessionId, status: sessionStatus },\n    });\n  };\n}\n\nexport function setServerSessionId(sessionId) {\n  return (dispatch) => {\n    // console.log(\"store.js setServerSessionId with \" +sessionId)\n    dispatch({\n      type: actionTypes.SET_SERVER_SESSION_ID,\n      data: sessionId,\n    });\n  };\n}\n\nexport function setSessionData(sessionData) {\n  return (dispatch) => {\n    // console.log(`store.js setSessionData called with::`);\n    // console.log(sessionData)\n    dispatch({\n      type: actionTypes.SET_SERVER_SESSION_DATA,\n      data: sessionData,\n    });\n  };\n}\n\nexport function setUserAttributeSelection(selectedAttributes) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_ATTRIBUTES_SELECTION,\n      data: selectedAttributes,\n    });\n  };\n}\n\nexport function updateSession(sessionStatus) {\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.UPDATE_SESSION,\n      data: { status: sessionStatus },\n    };\n    dispatch(toDispatch);\n  };\n}\n\nexport function setEndpoint(endpoint) {\n  console.log(\"store.js setting endpoint to \" + endpoint)\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.SET_ENDPOINT,\n      data: endpoint,\n    };\n    dispatch(toDispatch);\n  };\n}\n\nexport function addToSelection(index, source) {\n  // console.log(`store.js:: will add to seleciton ${index} , ${source}`);\n  const data = new UserSelection(index, source);\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.ADD_ATTRIBUTES_TO_SELECTION,\n      data: data,\n    });\n  };\n}\n\nexport function addSetToSelection(setArray) {\n  const data = [];\n  setArray.forEach((attrObj) => {\n    Object.keys(attrObj).map((key) => {\n      // console.log(`will fetch key ${key} from` )\n      data.push(new UserSelection(key, attrObj.source));\n      return new UserSelection(key, attrObj[key]);\n    });\n  });\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.ADD_SET_TO_ATTRIBUTES_SELECTION,\n      data: data,\n    });\n  };\n}\n\nexport function removeFromSelection(index) {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.REMOVE_ATTRIBUTE_FROM_SELECTION,\n      index: index,\n    };\n\n    dispatch(toDispatch);\n  };\n}\n\nexport function vcSentToUser() {\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.VC_SENT_TO_USER,\n    };\n    dispatch(toDispatch);\n  };\n}\n\nexport function increaseCardIndex() {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.INCREASE_CARD_INDEX,\n    };\n    dispatch(toDispatch);\n  };\n}\n\nexport function decreaseCardIndex() {\n  // console.log(`store.js will remove from  seleciton ${index}`);\n  return (dispatch) => {\n    let toDispatch = {\n      type: actionTypes.DECREASE_CARD_INDEX,\n    };\n    dispatch(toDispatch);\n  };\n}\n\nexport function requestVCgeneration(\n  url,\n  selectedAttributes,\n  vcType,\n  isMobile = false\n) {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST });\n\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"data\", selectedAttributes);\n\n    console.log(\n      \"store.js - requestVCgeneration:: will make VC generation request\"\n    );\n    console.log(`store.js - requestVCgeneration:: for the url ${url}`);\n    // console.log(`store.js - requestVCgeneration:: with data`)\n    // console.log(selectedAttributes);\n    // console.log(isMobile);\n    axios\n      .post(url, {\n        data: selectedAttributes,\n        vcType: vcType,\n        isMobile: isMobile,\n      })\n      .then((data) => {\n        console.log(\n          \"store.js- requestVCgeneration:: got the data form the server\"\n        );\n        console.log(data.data);\n\n        console.log(\"store.js- requestVCgeneration:: got vcType\");\n        console.log(vcType);\n\n        return dispatch({\n          type: actionTypes.GET_QR_AUTH_RESPONSE,\n          data: data.data,\n          vcType: vcType,\n        });\n      });\n  };\n}\n\nexport function makeConnectionRequest() {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST });\n    axios.post(\"/makeConnectionRequest\", {}).then((data) => {\n      console.log(\n        \"store.js:: makeConnectionRequest got the data form the server\"\n      );\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data,\n      });\n    });\n  };\n}\n\nexport function completeDIDAuth(uuid) {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.SET_DID_TRUE, data: uuid });\n  };\n}\n\nexport function makeAndPushVC(\n  url,\n  selectedAttributes,\n  vcType,\n  sealSession,\n  isMobile = false\n) {\n  return (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"data\", selectedAttributes);\n    console.log(\"store.js - makeAndPushVC:: will make VC generation request\");\n\n    console.log(`store.js :: makeandpushVC:: ${url}, and ${vcType}`);\n    axios\n      .post(url, {\n        data: selectedAttributes,\n        sealSession: sealSession,\n        vcType: vcType,\n        isMobile: isMobile,\n      })\n      .then((data) => {\n        console.log(\"store.js- makeAndPushVC:: got the data form the server\");\n        dispatch({ type: actionTypes.VC_SENT_TO_USER });\n      })\n      .catch((err) => {\n        console.log(\"store.js- makeAndPushVC:: ERROR\");\n        console.log(err);\n        dispatch({ type: actionTypes.VC_ISSUE_FAILED });\n      });\n    //TODO add here an action denoting that the VC was sent\n  };\n}\n\n\n// export function makeAndPushVCJolo(\n//   url,\n//   selectedAttributes,\n//   vcType,\n//   sealSession,\n//   isMobile = false\n// ) {\n//   return (dispatch) => {\n//     let bodyFormData = new FormData();\n//     bodyFormData.set(\"data\", selectedAttributes);\n    \n//     axios\n//       .post(url, {\n//         data: selectedAttributes,\n//         sealSession: sealSession,\n//         vcType: vcType,\n//         isMobile: isMobile,\n//       })\n//       .then((resp) => {\n//         console.log(resp)\n//         dispatch({ type: actionTypes.JOLO_VC_GENERATED, data: resp.data.qr });\n//       })\n//       .catch((err) => {\n//         console.log(\"store.js- makeAndPushVC:: ERROR\");\n//         console.log(err);\n//         dispatch({ type: actionTypes.VC_ISSUE_FAILED });\n//       });\n//   };\n// }\n\nexport function requestVC(\n  url,\n  vcType,\n  sessionId,\n  isMobile = false\n) {\n  return (dispatch) => {\n    axios\n      .post(url, {\n        sessionId: sessionId,\n        vcType: vcType,\n        isMobile: isMobile,\n      })\n      .then((resp) => {\n        console.log(\"store.js requestVC_response\")\n        console.log(resp)\n        dispatch({ type: actionTypes.JOLO_VC_GENERATED, data: resp.data.qr });\n      })\n      .catch((err) => {\n        console.log(\"store.js- makeAndPushVC:: ERROR\");\n        console.log(err);\n        dispatch({ type: actionTypes.VC_ISSUE_FAILED });\n      });\n  };\n}\n\n\n\n\n\nexport function setSealSession(sessionId) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_SEAL_SESSION,\n      data: sessionId,\n    });\n  };\n}\n\n\nexport function setSessionId(sessionId) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_SESSION_ID,\n      data: sessionId,\n    });\n  };\n}\n\nexport function makeSealSession(baseUrl) {\n  console.log(\"store:: makeSealSession\");\n  return (dispatch) => {\n    axios.post(`${baseUrl}seal/start-session`, {}).then((resp) => {\n      console.log(\"store.js:: makeSealSession\");\n      // console.log(resp.data);\n      return dispatch({\n        type: actionTypes.SET_SEAL_SESSION,\n        data: resp.data,\n      });\n    });\n  };\n}\n\nexport function makeOnlyConnectionRequest(\n  sealSession,\n  baseUrl,\n  vcType =\"didAuth\",\n  isMobile\n) {\n  let postData = {\n    sealSession: sealSession,\n    vcType: vcType,\n  };\n\n  if (isMobile) {\n    postData.isMobile = isMobile;\n  }\n  return (dispatch) => {\n    dispatch({ type: actionTypes.MAKE_QR_AUTH_REQUEST });\n    axios.post(`${baseUrl}/makeConnectionRequest`, postData).then((data) => {\n      console.log(\n        \"store.js -- onlyConnectionRequest:: got the data form the server\"\n      );\n      return dispatch({\n        type: actionTypes.GET_QR_AUTH_RESPONSE,\n        data: data.data,\n      });\n    });\n  };\n}\n\nexport function makeSealSessionWithDIDConnecetionRequest(\n  baseUrl,\n  vcType,\n  isMobile\n) {\n  console.log(\n    `store.js:: makeSealSessionWithDIDConnecetionRequest  the base url is-->${baseUrl}<--`\n  );\n  return (dispatch) => {\n    let sessionId = \"\";\n    let postUrl = baseUrl?`${baseUrl}seal/start-session`:`/seal/start-session`\n    axios\n      .post(postUrl, {})\n      .then((resp) => {\n        sessionId = resp.data;\n        return dispatch({\n          type: actionTypes.SET_SEAL_SESSION,\n          data: resp.data,\n        });\n      })\n      .then((obj) => {\n        // console.log(\"makeSealSessionWithDIDConnecetionRequest\")\n        console.log(`isMobile? ${isMobile}`);\n        let postUrl = baseUrl?`${baseUrl}makeConnectionRequest`:`/makeConnectionRequest`\n        axios\n          .post(postUrl, {\n            sealSession: sessionId,\n            baseUrl: baseUrl,\n            vcType: vcType,\n            isMobile: isMobile,\n          })\n          .then((data) => {\n            return dispatch({\n              type: actionTypes.GET_QR_AUTH_RESPONSE,\n              data: data.data,\n            });\n          });\n      });\n  };\n}\n\nexport function setDidCallback(callback) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_CALLBACK,\n      data: callback,\n    });\n  };\n}\n\nexport function setEidasUriPort(uri, port) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_EIDAS_URI_PORT,\n      data: { uri: uri, port: port },\n    });\n  };\n}\n\nexport function setEidasRedirectUri(uri) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_EIDAS_REDIRECT_URI,\n      data: uri,\n    });\n  };\n}\n\nexport function setEdugainRedirectUri(uri) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_EDUGAIN_REDIRECT_URI,\n      data: uri,\n    });\n  };\n}\n\n\nexport function setEdugainUriPort(uri, port) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_EDUGAIN_URI_PORT,\n      data: { uri: uri, port: port },\n    });\n  };\n}\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(\n    reducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}