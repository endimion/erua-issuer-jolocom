{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri } from \"../../../store\";\nimport { vcTypes } from \"../../../config/vcTypes\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../utils/isMobile\";\n\nvar IssueKYB = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueKYB, _React$Component);\n\n  var _super = _createSuper(IssueKYB);\n\n  function IssueKYB(props) {\n    var _this;\n\n    _classCallCheck(this, IssueKYB);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithEidasAuth = _this.proceedWithEidasAuth.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.eidas !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueKYB, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        //TODO clean this up\n        var toSelect = [this.props.sessionData.eidas];\n        this.props.setEidasToSelection(toSelect); ///\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.DID & !this.hasRequiredAttributes) {\n        //if DID auth is completed\n        // register the callbackUri to the SessionManager\n        var postUrl = this.props.baseUrl ? \"\".concat(this.props.baseUrl, \"seal/update-session\") : \"/seal/update-session\";\n        axios.post(postUrl, {\n          sessionId: this.props.sealSession,\n          variableName: \"ClientCallbackAddr\",\n          variableValue: this.props.eidasRedirectUri\n        }).then(function (data) {\n          console.log(\"eidas.js:: session updated\");\n        });\n      }\n    }\n  }, {\n    key: \"proceedWithEidasAuth\",\n    value: function proceedWithEidasAuth() {\n      var _this2 = this;\n\n      //make msToken\n      console.log(\"proceedWithEidasAuth \");\n      axios.get(\"\".concat(this.props.baseUrl, \"/seal/make-eidas-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n        console.log(\"proceedWithEidasAuth the data is::\");\n        console.log(data);\n        window.location.href = \"https://\".concat(_this2.props.eidasUri, \":\").concat(_this2.props.eidasPort, \"/eidas-idp/is/query?msToken=\").concat(data.data.additionalData);\n        return null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = this.props.vcSent ? 2 : !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }, {\n        title: 'Authenticate over \"eIDAS-eID\"'\n      }, {\n        title: \"Request Issuance\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      var eIDASLoginButton = !this.hasRequiredAttributes ? __jsx(Button, {\n        onClick: this.proceedWithEidasAuth\n      }, \"eIDAS\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eIDAS\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        ,\n        baseUrl: this.props.baseUrl // user attributes are not required as they are already in the backend\n        // only the type of the VC should be provided here\n        // vcAttributes={this.props.userSelection}\n        ,\n        uuid: this.props.sealSession,\n        vcType: vcTypes.eidas\n      });\n\n      var eidasCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an eIDAS based Verifiable Credential\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through the required data sources, click the \\\"Issue\\\" button to generate and receive your VC .\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        card: eidasCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        credQROffer: this.props.credQROffer\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sessionId, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.endpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.sessionId));\n                  DIDOk = req.session.DID;\n                  sessionId = req.session.sessionId;\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sessionId));\n                }\n\n                if (sessionId) {\n                  reduxStore.dispatch(setSealSession(sessionId));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueKYB;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: function startSealSessionAndDidAuth(baseUrl, vcType, isMobile) {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueKYB);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/vc/issue/kyb.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","vcTypes","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueKYB","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","hasRequiredAttributes","undefined","eidas","toSelect","setEidasToSelection","DID","makeConnectionRequest","sealSession","baseUrl","postUrl","post","sessionId","variableName","variableValue","eidasRedirectUri","then","data","console","log","get","window","location","href","eidasUri","eidasPort","additionalData","stepNumber","vcSent","stepperSteps","title","qrData","uuid","serverSessionId","eIDASLoginButton","issueVCBut","eidasCard","marginTop","result","credQROffer","reduxStore","req","userSessionData","session","userData","endpoint","DIDOk","getState","Component","mapStateToProps","state","fetching","userSelection","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","startSealSessionAndDidAuth","setTheSealSession","setEidas","uri","setEidasRedirect"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,yBAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,kBAPF,EAQEC,eARF,EASEC,eATF,EAUEC,wCAVF,EAWEC,cAXF,EAYEC,eAZF,EAaEC,mBAbF,QAcO,gBAdP;AAeA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBD,KAAK,CAACC,QAAtB;AACA,UAAKC,UAAL,GAAkBF,KAAK,CAACE,UAAxB;AACA,UAAKC,WAAL,GAAmBH,KAAK,CAACG,WAAzB;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AACA,UAAKC,qBAAL,GACEN,KAAK,CAACG,WAAN,KAAsB,IAAtB,IACAH,KAAK,CAACG,WAAN,KAAsBI,SADtB,IAEAP,KAAK,CAACG,WAAN,CAAkBK,KAAlB,KAA4BD,SAH9B;AANiB;AAUlB;;;;WAqCD,6BAAoB;AAClB,UAAI,KAAKP,KAAL,CAAWG,WAAX,IAA0B,KAAKH,KAAL,CAAWG,WAAX,CAAuBK,KAArD,EAA4D;AAC1D;AACA,YAAIC,QAAQ,GAAG,CAAC,KAAKT,KAAL,CAAWG,WAAX,CAAuBK,KAAxB,CAAf;AACA,aAAKR,KAAL,CAAWU,mBAAX,CAA+BD,QAA/B,EAH0D,CAI1D;AACD;;AAED,UAAI,CAAC,KAAKT,KAAL,CAAWW,GAAhB,EAAqB;AACnB;AACA,aAAKX,KAAL,CAAWY,qBAAX,CACE,KAAKZ,KAAL,CAAWa,WADb,EAEE,KAAKb,KAAL,CAAWc,OAFb,EAGE,OAHF,EAIEhB,QAAQ,EAJV;AAMD;AACF;;;WAED,8BAAqB;AACnB,UAAI,KAAKE,KAAL,CAAWW,GAAX,GAAiB,CAAC,KAAKL,qBAA3B,EAAkD;AAChD;AACA;AACA,YAAIS,OAAO,GAAG,KAAKf,KAAL,CAAWc,OAAX,aACP,KAAKd,KAAL,CAAWc,OADJ,2BAEV,sBAFJ;AAGA3C,QAAAA,KAAK,CACF6C,IADH,CACQD,OADR,EACiB;AACbE,UAAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWa,WADT;AAEbK,UAAAA,YAAY,EAAE,oBAFD;AAGbC,UAAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWoB;AAHb,SADjB,EAMGC,IANH,CAMQ,UAACC,IAAD,EAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,SARH;AASD;AACF;;;WAED,gCAAuB;AAAA;;AACrB;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACArD,MAAAA,KAAK,CACFsD,GADH,WAEO,KAAKzB,KAAL,CAAWc,OAFlB,8CAE6D,KAAKd,KAAL,CAAWa,WAFxE,GAIGQ,IAJH,CAIQ,UAACC,IAAD,EAAU;AACdC,QAAAA,OAAO,CAACC,GAAR;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,qBAAkC,MAAI,CAAC5B,KAAL,CAAW6B,QAA7C,cAAyD,MAAI,CAAC7B,KAAL,CAAW8B,SAApE,yCAA4GR,IAAI,CAACA,IAAL,CAAUS,cAAtH;AACA,eAAO,IAAP;AACD,OAVH;AAWD;;;WAED,kBAAS;AACP,UAAIC,UAAU,GAAG,KAAKhC,KAAL,CAAWiC,MAAX,GACb,CADa,GAEb,CAAC,KAAKjC,KAAL,CAAWW,GAAZ,GACA,CADA,GAEA,KAAKL,qBAAL,GACA,CADA,GAEA,CANJ;AAOA,UAAI4B,YAAY,GAAG,CACjB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADiB,EAEjB;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAFiB,EAGjB;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHiB,CAAnB;;AAMA,UAAI,KAAKnC,KAAL,CAAWoC,MAAX,IAAqBtC,QAAQ,EAA7B,IAAmC,CAAC,KAAKE,KAAL,CAAWW,GAAnD,EAAwD;AACtD,eACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,GAAD,QACE,MAAC,SAAD;AAAW,UAAA,KAAK,EAAEuB,YAAlB;AAAgC,UAAA,SAAS,EAAEF;AAA3C,UADF,CADF,CADF,EAME,MAAC,aAAD;AACE,UAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWc,OADtB;AAEE,UAAA,MAAM,EAAE,KAAKd,KAAL,CAAWoC,MAFrB;AAGE,UAAA,GAAG,EAAE,KAAKpC,KAAL,CAAWW,GAHlB;AAIE,UAAA,IAAI,EAAE,KAAKX,KAAL,CAAWqC,IAJnB;AAKE,UAAA,eAAe,EAAE,KAAKrC,KAAL,CAAWsC,eAL9B;AAME,UAAA,WAAW,EAAE,KAAKtC,KAAL,CAAWa;AAN1B,UANF,CADF;AAiBD;;AAED,UAAI0B,gBAAgB,GAAG,CAAC,KAAKjC,qBAAN,GACrB,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKF;AAAtB,iBADqB,GAGrB,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,QAAQ;AAAlC,iBAHF;;AAQA,UAAIoC,UAAU,GACZ,MAAC,aAAD;AACE,QAAA,qBAAqB,EAAE,KAAKlC,qBAD9B,CAEE;AAFF;AAGE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWc,OAHtB,CAIE;AACA;AACA;AANF;AAOE,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWa,WAPnB;AAQE,QAAA,MAAM,EAAE5B,OAAO,CAACuB;AARlB,QADF;;AAaA,UAAIiC,SAAS,GACX,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAArC,SACE,MAAC,IAAD,CAAM,MAAN,qDADF,EAEE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,KAAN,QACG,KAAKpC,qBAAL,GACG,gCADH,GAEG,kDAHN,CADF,EAME,MAAC,IAAD,CAAM,IAAN,sIANF,EAUE,MAAC,SAAD,QACE,MAAC,GAAD,QACE,MAAC,GAAD,QAAMiC,gBAAN,CADF,EAEE,MAAC,GAAD,QAAMC,UAAN,CAFF,CADF,CAVF,CAFF,CADF;;AAwBA,UAAIG,MAAM,GACR,MAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAK3C,KAAL,CAAWoC,MADrB;AAEE,QAAA,GAAG,EAAE,KAAKpC,KAAL,CAAWW,GAFlB;AAGE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWc,OAHtB;AAIE,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWqC,IAJnB;AAKE,QAAA,eAAe,EAAE,KAAKrC,KAAL,CAAWsC,eAL9B;AAME,QAAA,IAAI,EAAEG,SANR;AAOE,QAAA,MAAM,EAAE,KAAKzC,KAAL,CAAWiC,MAPrB;AAQE,QAAA,WAAW,EAAE,KAAKjC,KAAL,CAAWa,WAR1B;AASE,QAAA,WAAW,EAAE,KAAKb,KAAL,CAAW4C;AAT1B,QADF;;AAcA,aACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,GAAD,QACE,MAAC,SAAD;AAAW,QAAA,KAAK,EAAEV,YAAlB;AAAgC,QAAA,SAAS,EAAEF;AAA3C,QADF,CADF,CADF,EAMGW,MANH,EAQE,MAAC,GAAD,QACE,MAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAK3C,KAAL,CAAWc;AAAhC,QADF,CARF,CADF;AAcD;;;;sFApMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B+B,gBAAAA,UAA/B,QAA+BA,UAA/B,EAA2CC,GAA3C,QAA2CA,GAA3C;;AAIE,2BAAmC;AACjCC,kBAAAA,eAAe,GAAGD,GAAG,CAACE,OAAJ,CAAYC,QAA9B;AACAJ,kBAAAA,UAAU,CAAC5C,QAAX,CAAoBzB,WAAW,CAACsE,GAAG,CAACE,OAAJ,CAAYE,QAAb,CAA/B;AACIpC,kBAAAA,OAH6B,GAGnBgC,GAAG,CAACE,OAAJ,CAAYlC,OAAZ,cAA0BgC,GAAG,CAACE,OAAJ,CAAYlC,OAAtC,SAAmD,EAHhC;AAIjC+B,kBAAAA,UAAU,CAAC5C,QAAX,CAAoBxB,UAAU,CAACqC,OAAD,CAA9B;AACA+B,kBAAAA,UAAU,CAAC5C,QAAX,CAAoBvB,kBAAkB,CAACoE,GAAG,CAACE,OAAJ,CAAY/B,SAAb,CAAtC;AACAkC,kBAAAA,KAAK,GAAGL,GAAG,CAACE,OAAJ,CAAYrC,GAApB;AACAM,kBAAAA,SAAS,GAAG6B,GAAG,CAACE,OAAJ,CAAY/B,SAAxB;AACD,iBAZH,CAcE;;;AACA,oBAAI8B,eAAJ,EAAqB;AACnBF,kBAAAA,UAAU,CAAC5C,QAAX,CAAoB7B,cAAc,CAAC2E,eAAD,CAAlC;AACD;;AACD,oBAAII,KAAJ,EAAW;AACTN,kBAAAA,UAAU,CAAC5C,QAAX,CAAoBtB,eAAe,CAACsC,SAAD,CAAnC;AACD;;AACD,oBAAIA,SAAJ,EAAe;AACb4B,kBAAAA,UAAU,CAAC5C,QAAX,CAAoBnB,cAAc,CAACmC,SAAD,CAAlC;AACD,iBAvBH,CAyBE;AACA;;;AA1BF,iDA2BS;AACLd,kBAAAA,WAAW,EAAE4C,eADR;AAELX,kBAAAA,MAAM,EAAES,UAAU,CAACO,QAAX,GAAsBhB,MAFzB;AAGLH,kBAAAA,MAAM,EAAE,KAHH;AAILpB,kBAAAA,WAAW,EAAEgC,UAAU,CAACO,QAAX,GAAsBvC;AAJ9B,iBA3BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAbqB3C,KAAK,CAACmF,S;;AAmN7B,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLrD,IAAAA,UAAU,EAAEqD,KAAK,CAACC,QADb;AAELpB,IAAAA,MAAM,EAAEmB,KAAK,CAACnB,MAFT;AAGLjC,IAAAA,WAAW,EAAEoD,KAAK,CAACpD,WAHd;AAILsD,IAAAA,aAAa,EAAEF,KAAK,CAACE,aAJhB;AAI+B;AACpC3C,IAAAA,OAAO,EAAEyC,KAAK,CAACzC,OALV;AAMLH,IAAAA,GAAG,EAAE4C,KAAK,CAAC5C,GANN;AAOL2B,IAAAA,eAAe,EAAEiB,KAAK,CAACjB,eAPlB;AAQLD,IAAAA,IAAI,EAAEkB,KAAK,CAAClB,IARP;AASLJ,IAAAA,MAAM,EAAEsB,KAAK,CAACtB,MATT;AAULpB,IAAAA,WAAW,EAAE0C,KAAK,CAAC1C,WAVd;AAWLgB,IAAAA,QAAQ,EAAE0B,KAAK,CAAC1B,QAXX;AAYLC,IAAAA,SAAS,EAAEyB,KAAK,CAACzB,SAZZ;AAaLoB,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAbX;AAcL9B,IAAAA,gBAAgB,EAAEmC,KAAK,CAACnC,gBAdnB;AAeLwB,IAAAA,WAAW,EAAEW,KAAK,CAACX;AAfd,GAAP;AAiBD;;AAED,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACzD,QAAD,EAAc;AACvC,SAAO;AACLS,IAAAA,mBAAmB,EAAE,6BAACiD,GAAD,EAAS;AAC5B1D,MAAAA,QAAQ,CAAC3B,iBAAiB,CAACqF,GAAD,CAAlB,CAAR;AACD,KAHI;AAILC,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACnB5D,MAAAA,QAAQ,CAAC1B,eAAe,CAACsF,KAAD,CAAhB,CAAR;AACD,KANI;AAOLC,IAAAA,WAAW,EAAE,qBAACC,OAAD,EAAa;AACxB9D,MAAAA,QAAQ,CAACzB,WAAW,CAAC0E,QAAD,CAAZ,CAAR;AACD,KATI;AAULtC,IAAAA,qBAAqB,EAAE,+BAACC,WAAD,EAAcC,OAAd,EAAuBkD,MAAvB,EAA+BlE,QAA/B,EAA4C;AACjEG,MAAAA,QAAQ,CACN5B,yBAAyB,CAACwC,WAAD,EAAcC,OAAd,EAAuBkD,MAAvB,EAA+BlE,QAA/B,CADnB,CAAR;AAGD,KAdI;AAeLmE,IAAAA,SAAS,EAAE,mBAAC5B,IAAD,EAAU;AACnBpC,MAAAA,QAAQ,CAACtB,eAAe,CAAC0D,IAAD,CAAhB,CAAR;AACD,KAjBI;AAkBL6B,IAAAA,gBAAgB,EAAE,0BAACpD,OAAD,EAAa;AAC7Bb,MAAAA,QAAQ,CAACrB,eAAe,CAACkC,OAAD,CAAhB,CAAR;AACD,KApBI;AAqBLqD,IAAAA,0BAA0B,EAAE,oCAACrD,OAAD,EAAUkD,MAAV,EAAkBlE,QAAlB,EAA+B;AACzDG,MAAAA,QAAQ,CACNpB,wCAAwC,CAACiC,OAAD,EAAUkD,MAAV,EAAkBlE,QAAlB,CADlC,CAAR;AAGD,KAzBI;AA0BLsE,IAAAA,iBAAiB,EAAE,2BAACnD,SAAD,EAAe;AAChChB,MAAAA,QAAQ,CAACnB,cAAc,CAACmC,SAAD,CAAf,CAAR;AACD,KA5BI;AA6BLoD,IAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMhD,IAAN,EAAe;AACvBrB,MAAAA,QAAQ,CAAClB,eAAe,CAACuF,GAAD,EAAMhD,IAAN,CAAhB,CAAR;AACD,KA/BI;AAiCLiD,IAAAA,gBAAgB,EAAE,0BAACD,GAAD,EAAS;AACzBrE,MAAAA,QAAQ,CAACjB,mBAAmB,CAACsF,GAAD,CAApB,CAAR;AACD;AAnCI,GAAP;AAqCD,CAtCD;;AAwCA,eAAenF,OAAO,CAACmE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C3D,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n} from \"../../../store\";\nimport { vcTypes } from \"../../../config/vcTypes\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../utils/isMobile\";\n\nclass IssueKYB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.eidas !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sessionId;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.endpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.sessionId));\n      DIDOk = req.session.DID;\n      sessionId = req.session.sessionId;\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sessionId));\n    }\n    if (sessionId) {\n      reduxStore.dispatch(setSealSession(sessionId));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      //TODO clean this up\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n      ///\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      this.props.makeConnectionRequest(\n        this.props.sealSession,\n        this.props.baseUrl,\n        \"eidas\",\n        isMobile()\n      );\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.DID & !this.hasRequiredAttributes) {\n      //if DID auth is completed\n      // register the callbackUri to the SessionManager\n      let postUrl = this.props.baseUrl\n        ? `${this.props.baseUrl}seal/update-session`\n        : \"/seal/update-session\";\n      axios\n        .post(postUrl, {\n          sessionId: this.props.sealSession,\n          variableName: \"ClientCallbackAddr\",\n          variableValue: this.props.eidasRedirectUri,\n        })\n        .then((data) => {\n          console.log(\"eidas.js:: session updated\");\n        });\n    }\n  }\n\n  proceedWithEidasAuth() {\n    //make msToken\n    console.log(\"proceedWithEidasAuth \");\n    axios\n      .get(\n        `${this.props.baseUrl}/seal/make-eidas-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        console.log(`proceedWithEidasAuth the data is::`);\n        console.log(data);\n\n        window.location.href = `https://${this.props.eidasUri}:${this.props.eidasPort}/eidas-idp/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });\n  }\n\n  render() {\n    let stepNumber = this.props.vcSent\n      ? 2\n      : !this.props.DID\n      ? 0\n      : this.hasRequiredAttributes\n      ? 2\n      : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS-eID\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? (\n      <Button onClick={this.proceedWithEidasAuth}>eIDAS</Button>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        eIDAS\n      </Button>\n    );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        baseUrl={this.props.baseUrl}\n        // user attributes are not required as they are already in the backend\n        // only the type of the VC should be provided here\n        // vcAttributes={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={vcTypes.eidas}\n      />\n    );\n\n    let eidasCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>Issue an eIDAS based Verifiable Credential</Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through the required data sources, click\n            the \"Issue\" button to generate and receive your VC .\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueKYB);\n"]},"metadata":{},"sourceType":"module"}