{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nvar Wizard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Wizard, _React$Component);\n\n  var _super = _createSuper(Wizard);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _super.call(this, props);\n    _this.addUserToRegistry = _this.addUserToRegistry.bind(_assertThisInitialized(_this));\n    _this.proceedToKeycloak = _this.proceedToKeycloak.bind(_assertThisInitialized(_this));\n    _this.state = {\n      addedToRegistry: false\n    };\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"addUserToRegistry\",\n    value: function addUserToRegistry() {\n      var _this2 = this;\n\n      var sessionId = this.props.sessionId;\n      var reqObj = {\n        sessionId: sessionId\n      };\n      axios.post(\"/registry/add\", reqObj).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          addedToRegistry: true\n        });\n      }); //TODO add here the send email callback\n    }\n  }, {\n    key: \"proceedToKeycloak\",\n    value: function proceedToKeycloak() {\n      console.log(\"proceed to keycloak\");\n      window.location.href = this.props.keycloakUrl;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var addToRegistryDiv = !this.state.addedToRegistry ? __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"3 rem\"\n        }\n      }, __jsx(\"button\", {\n        onClick: this.addUserToRegistry\n      }, \"Register\")) : __jsx(\"div\", {\n        style: {\n          margin: \"3 rem 3 rem 3 rem 3 rem\"\n        }\n      }, \"Thank you for registering\");\n      return __jsx(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"3rem\"\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"3rem\"\n        }\n      }, \"Would you like to add your KYB profile in the services public registry in an easily Verifiable Format? If you opt in for this feature the public profile of your organization will be easily verified by anyone (public authorities, B2B transactions etc.) greatly facilitating your dealings with these parties. If Yes, please click the \\u201CRegister\\u201D button, else click the \\u201CNext\\u201D button to send your KYB attributes to the service that originated this flow\"), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"3rem\"\n        }\n      }, \"Details:\"), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"3rem\"\n        }\n      }, __jsx(ValidateTable, {\n        userDetails: this.props.userDetails\n      })), addToRegistryDiv, __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"3rem\"\n        }\n      }, __jsx(\"button\", {\n        onClick: this.proceedToKeycloak\n      }, \"Finish\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n                return _context.abrupt(\"return\", {\n                  userDetails: req.userDetails,\n                  selfLei: req.selfLei,\n                  sessionId: req.sessionId,\n                  keycloakUrl: req.keycloakRedirectURI\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Wizard;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/registry-prompt.js"],"names":["React","axios","Layout","connect","ValidateTable","Wizard","props","addUserToRegistry","bind","proceedToKeycloak","state","addedToRegistry","sessionId","reqObj","post","then","response","console","log","setState","window","location","href","keycloakUrl","addToRegistryDiv","marginBottom","margin","marginTop","userDetails","reduxStore","req","selfLei","keycloakRedirectURI","Component","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addUserToRegistry = this.addUserToRegistry.bind(this);\n    this.proceedToKeycloak = this.proceedToKeycloak.bind(this);\n    this.state = {\n      addedToRegistry: false,\n    };\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n      selfLei: req.selfLei,\n      sessionId: req.sessionId,\n      keycloakUrl: req.keycloakRedirectURI\n    };\n  }\n\n  addUserToRegistry() {\n    let sessionId = this.props.sessionId;\n    const reqObj = { sessionId: sessionId };\n    axios.post(\"/registry/add\", reqObj).then((response) => {\n      console.log(response);\n      this.setState({\n        addedToRegistry: true,\n      });\n    });\n    //TODO add here the send email callback\n  \n  }\n\n  proceedToKeycloak(){\n    console.log(\"proceed to keycloak\")\n    window.location.href = this.props.keycloakUrl\n  }\n\n  render() {\n    let addToRegistryDiv = !this.state.addedToRegistry ? (\n      <div className=\"row\" style={{ marginBottom: \"3 rem\"}}>\n        <button onClick={this.addUserToRegistry}>Register</button>\n      </div>\n    ) : (\n      <div style={{ margin: \"3 rem 3 rem 3 rem 3 rem\"}}>Thank you for registering</div>\n    );\n\n    return (\n      <div className=\"container\" style={{ marginTop: \"3rem\" }}>\n        {/* <ValidateTable userDetails={this.props.userDetails}></ValidateTable> */}\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Would you like to add your KYB profile in the services public registry\n          in an easily Verifiable Format? If you opt in for this feature the\n          public profile of your organization will be easily verified by anyone\n          (public authorities, B2B transactions etc.) greatly facilitating your\n          dealings with these parties. If Yes, please click the “Register”\n          button, else click the “Next” button to send your KYB attributes to\n          the service that originated this flow\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Details:\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <ValidateTable userDetails={this.props.userDetails}></ValidateTable>\n        </div>\n\n        {addToRegistryDiv}\n\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <button onClick={this.proceedToKeycloak}>Finish</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);\n"]},"metadata":{},"sourceType":"module"}