{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addUserToRegistry = this.addUserToRegistry.bind(this);\n    this.state = {\n      addedToRegistry: false\n    };\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n      selfLei: req.selfLei,\n      sessionId: req.sessionId\n    };\n  }\n\n  addUserToRegistry() {\n    let sessionId = this.props.sessionId;\n    const reqObj = {\n      sessionId: sessionId\n    };\n    axios.post(\"/registry/add\", reqObj).then(response => {\n      console.log(response);\n      this.setState({\n        addedToRegistry: true\n      });\n    });\n  }\n\n  render() {\n    let addToRegistryDiv = !this.state.addedToRegistry ? __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, __jsx(\"button\", {\n      onClick: this.addUserToRegistry\n    }, \"Register\")) : __jsx(\"div\", null, \"Thank you for registering\");\n    return __jsx(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"3rem\"\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, \"Would you like to add your KYB profile in the services public registry in an easily Verifiable Format? If you opt in for this feature the public profile of your organization will be easily verified by anyone (public authorities, B2B transactions etc.) greatly facilitating your dealings with these parties. If Yes, please click the \\u201CRegister\\u201D button, else click the \\u201CNext\\u201D button to send your KYB attributes to the service that originated this flow\"), __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, \"Details:\"), __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, __jsx(ValidateTable, {\n      userDetails: this.props.userDetails\n    })), addToRegistryDiv, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"3rem\"\n      }\n    }, __jsx(\"button\", null, \"Finish\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\"\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);","map":{"version":3,"sources":["/home/ni/code/js/grids-DC/pages/kyb/registry-prompt.js"],"names":["React","axios","Layout","connect","ValidateTable","Wizard","Component","constructor","props","addUserToRegistry","bind","state","addedToRegistry","getInitialProps","reduxStore","req","userDetails","selfLei","sessionId","reqObj","post","then","response","console","log","setState","render","addToRegistryDiv","marginBottom","marginTop","mapStateToProps","test","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAE2B,eAAfC,eAAe,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAAsB;AAChD;AACA;AACA,WAAO;AACLC,MAAAA,WAAW,EAAED,GAAG,CAACC,WADZ;AAELC,MAAAA,OAAO,EAAEF,GAAG,CAACE,OAFR;AAGLC,MAAAA,SAAS,EAAEH,GAAG,CAACG;AAHV,KAAP;AAKD;;AAEDT,EAAAA,iBAAiB,GAAG;AAClB,QAAIS,SAAS,GAAG,KAAKV,KAAL,CAAWU,SAA3B;AACA,UAAMC,MAAM,GAAG;AAAED,MAAAA,SAAS,EAAEA;AAAb,KAAf;AACAjB,IAAAA,KAAK,CAACmB,IAAN,CAAW,eAAX,EAA4BD,MAA5B,EAAoCE,IAApC,CAA0CC,QAAD,IAAc;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACZb,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,KALD;AAMD;;AAEDc,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAgB,GAAG,CAAC,KAAKhB,KAAL,CAAWC,eAAZ,GACrB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEgB,QAAAA,YAAY,EAAE;AAAhB;AAA5B,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKnB;AAAtB,kBADF,CADqB,GAKrB,+CALF;AAQA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEoB,QAAAA,SAAS,EAAE;AAAb;AAAlC,OAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAED,QAAAA,YAAY,EAAE;AAAhB;AAA5B,8dAFF,EAWE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEA,QAAAA,YAAY,EAAE;AAAhB;AAA5B,kBAXF,EAcE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEA,QAAAA,YAAY,EAAE;AAAhB;AAA5B,OACE,MAAC,aAAD;AAAe,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWQ;AAAvC,MADF,CAdF,EAkBGW,gBAlBH,EAoBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAA5B,OACE,+BADF,CApBF,CADF;AA0BD;;AAjEkC;;AAoErC,SAASE,eAAT,CAAyBnB,KAAzB,EAAgC;AAC9B,SAAO;AACLoB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAGA,eAAe9B,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport ValidateTable from \"../../components/ValidateKYBComp\";\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addUserToRegistry = this.addUserToRegistry.bind(this);\n    this.state = {\n      addedToRegistry: false,\n    };\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      userDetails: req.userDetails,\n      selfLei: req.selfLei,\n      sessionId: req.sessionId,\n    };\n  }\n\n  addUserToRegistry() {\n    let sessionId = this.props.sessionId;\n    const reqObj = { sessionId: sessionId };\n    axios.post(\"/registry/add\", reqObj).then((response) => {\n      console.log(response);\n      this.setState({\n        addedToRegistry: true,\n      });\n    });\n  }\n\n  render() {\n    let addToRegistryDiv = !this.state.addedToRegistry ? (\n      <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n        <button onClick={this.addUserToRegistry}>Register</button>\n      </div>\n    ) : (\n      <div>Thank you for registering</div>\n    );\n\n    return (\n      <div className=\"container\" style={{ marginTop: \"3rem\" }}>\n        {/* <ValidateTable userDetails={this.props.userDetails}></ValidateTable> */}\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Would you like to add your KYB profile in the services public registry\n          in an easily Verifiable Format? If you opt in for this feature the\n          public profile of your organization will be easily verified by anyone\n          (public authorities, B2B transactions etc.) greatly facilitating your\n          dealings with these parties. If Yes, please click the “Register”\n          button, else click the “Next” button to send your KYB attributes to\n          the service that originated this flow\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          Details:\n        </div>\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <ValidateTable userDetails={this.props.userDetails}></ValidateTable>\n        </div>\n\n        {addToRegistryDiv}\n\n        <div className=\"row\" style={{ marginBottom: \"3rem\" }}>\n          <button>Finish</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    test: \"Test\",\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wizard);\n"]},"metadata":{},"sourceType":"module"}